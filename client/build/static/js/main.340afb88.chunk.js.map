{"version":3,"sources":["UI/Button.js","Components/Navigation.js","Components/Header.js","UI/Card.js","Pages/CreateNewProfile.js","UI/Dot.js","Components/Skill.js","Components/SkillsList.js","Components/ProfileName.js","Components/ProfileSkillLevel.js","Components/ProfileAuthLevel.js","Pages/Profile.js","Hooks/input-field.js","Pages/Login.js","Components/SkillSummary.js","Components/ProfileListItem.js","Pages/ProfileList.js","App.js","index.js"],"names":["Button","props","buttonClass","className","onClick","value","children","Navigation","to","profileRoute","authorized","logOut","Header","history","useHistory","useState","profileAuthLevel","setProfileAuthLevel","httpError","setHttpError","localStorage","getItem","hamburgerToggle","setHamburgerToggle","useEffect","id","a","axios","get","headers","catch","err","console","log","response","data","msg","replace","authorization","getProfileAuthLevel","error","Fragment","removeItem","Card","cardClass","CreateNewProfile","inputName","setInputName","inputPassword","setInputPassword","addProfile","profile","post","push","onSubmit","e","preventDefault","name","password","htmlFor","type","onChange","target","Dot","dotClass","color","index","Skill","skillData","dataEntries","dataEntryClone","setDataEntryClone","dotClickHandler","attributes","newEntryAmount","updatedSkill","update","progressDots","map","position","maxDataEntries","newIndex","canEdit","SkillsList","skillsClone","setskillsClone","showSkillList","setShowSkillList","editedProfile","skillKey","updateSkills","newSkill","splice","updatedProfile","updateProfile","skillListClass","skillsList","profileSkill","skill","title","ProfileName","entrytValue","setEntryValue","ProfileSkillLevel","level","valueChangeHandler","editSkillLevel","skillTitles","skillTitle","ProfileAuthLevel","setEntrytValue","authLevels","authLevelValue","toString","Profile","setProfile","setEditedProfile","isLoading","setIsLoading","isUpdating","setIsUpdating","editToggle","setEditToggle","profileId","useParams","getProfile","buttons","deleteProfile","delete","saveProfile","patch","editToggleHandler","newData","profilTopContainerClass","bind","skillKeyes","skills","skillsAprenticeLevel1","skillsAprenticeLevel2","skillsJourneymanLevel1","skillsJourneymanLevel2","_id","auth","authLevel","useInputField","validate","enteredValue","setEnteredValue","wasTouched","setWasTouched","valueIsValid","hasError","valueBlurHandler","reset","Login","trim","nameInput","nameIsValid","nameHasError","nameChangeHandler","nameBlurHandler","passwordInput","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","formIsValid","getProfileId","setItem","token","setAuthLevel","onBlur","disabled","SkillSummary","isComplete","dotColor","setDotColor","isMaxed","parseInt","ProfileListItem","profileSkills","skillSummaries","ProfileList","profiles","setProfiles","getProfiles","Error","message","profilesList","App","setCanEdit","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.340afb88.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  const buttonClass = \"my-button \" + props.className;\r\n  return (\r\n    <button className={buttonClass} onClick={props.onClick} value={props.value}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <ul className=\"nav-list\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"link\" to={props.profileRoute}>\r\n          Your Profile\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"link\" to=\"/profile-list\">\r\n          Profile List\r\n        </Link>\r\n      </li>\r\n      {props.authorized && (\r\n        <li className=\"nav-item\">\r\n          <Link className=\"link\" to=\"/new-profile\">\r\n            Create New Profile\r\n          </Link>\r\n        </li>\r\n      )}\r\n      <li>\r\n        <Button className=\"logout-button nav-item\" onClick={props.logOut}>\r\n          Logout\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport \"./Header.css\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Header = (props) => {\r\n  const history = useHistory();\r\n  const [profileAuthLevel, setProfileAuthLevel] = useState();\r\n  const [httpError, setHttpError] = useState();\r\n  const authorized = profileAuthLevel === 2;\r\n  const profileRoute = \"/profile/\" + localStorage.getItem(\"user-id\");\r\n  const [hamburgerToggle, setHamburgerToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProfileAuthLevel = async (id) => {\r\n      const response = await axios\r\n        .get(`http://localhost:5000/profile/${id}`, {\r\n          headers: { \"x-auth-token\": localStorage.getItem(\"x-auth-token\") },\r\n        })\r\n        .catch((err) => console.log(err.response.data.msg));\r\n      if (!response) {\r\n        history.replace(\"/login\");\r\n      }\r\n      setProfileAuthLevel(response.data.data.authorization);\r\n    };\r\n    getProfileAuthLevel(localStorage.getItem(\"user-id\")).catch((error) => {\r\n      setHttpError(error);\r\n    });\r\n  }, [history, profileAuthLevel]);\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"x-auth-token\");\r\n    localStorage.removeItem(\"user-id\");\r\n    history.replace(\"/login\");\r\n  };\r\n\r\n  if (httpError) {\r\n    return <h3>{httpError}</h3>;\r\n  }\r\n\r\n  const hamburgerClickHandler = () => {\r\n    setHamburgerToggle(!hamburgerToggle);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"header-container\">\r\n        <div className=\"title-container\">\r\n          <h3 className=\"header-title\">Progress Tracker</h3>\r\n        </div>\r\n        <nav className=\"hamburger-toggle-container\">\r\n          <div className=\"hamburger-toggle\" onClick={hamburgerClickHandler}>\r\n            {hamburgerToggle ? <CancelIcon /> : <MenuIcon />}\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      {hamburgerToggle && (\r\n        <Navigation\r\n          profileRoute={profileRoute}\r\n          authorized={authorized}\r\n          logOut={logOut}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const cardClass = \"card \" + props.className;\r\n  return (\r\n    <div className={cardClass} onClick={props.onClick}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../Components/Header\";\r\n\r\nimport \"./CreateNewProfile.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst CreateNewProfile = (props) => {\r\n  const history = useHistory();\r\n  const [inputName, setInputName] = useState(\"\");\r\n\r\n  const nameChangeHandler = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    setInputPassword(e.target.value);\r\n  };\r\n\r\n  const addProfile = async (profile) => {\r\n    await axios\r\n      .post(\"/profile/\", profile, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .catch((err) => console.log(`Error: ${err}`));\r\n    history.push(`/profile-list`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    addProfile({\r\n      name: inputName,\r\n      password: inputPassword,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header id={localStorage.getItem(\"user-id\")} />\r\n      <Card className=\"create-new-profile-card\">\r\n        <div className=\"new-profile-container\">\r\n          <form className=\"new-profile-form\" onSubmit={submitHandler}>\r\n            <label className=\"new-profile-item\" htmlFor=\"name\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"new-profile-item\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={inputName}\r\n              onChange={nameChangeHandler}\r\n            />\r\n            <label className=\"new-profile-item\" htmlFor=\"name\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"new-profile-item\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={inputPassword}\r\n              onChange={passwordChangeHandler}\r\n            />\r\n            <Button className=\"new-profile-button\">Add Profile</Button>\r\n          </form>\r\n        </div>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateNewProfile;\r\n","import React from \"react\";\r\n\r\nimport \"./Dot.css\";\r\n\r\nconst Dot = (props) => {\r\n  const dotClass = `dot ${props.color} ${props.className}`;\r\n  return (\r\n    <div className={dotClass} onClick={props.onClick} index={props.index}></div>\r\n  );\r\n};\r\n\r\nexport default Dot;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Dot from \"../UI/Dot\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport \"./Skill.css\";\r\n\r\nconst Skill = (props) => {\r\n  const [dataEntryClone, setDataEntryClone] = useState(\r\n    props.skillData.dataEntries\r\n  );\r\n\r\n  const dotClickHandler = (e) => {\r\n    setDataEntryClone(e.target.attributes.index.value);\r\n    const newEntryAmount = e.target.attributes.index.value;\r\n    const updatedSkill = {\r\n      ...props.skillData,\r\n      dataEntries: newEntryAmount,\r\n    };\r\n    props.update(props.index, updatedSkill);\r\n  };\r\n\r\n  const addEntryAmountHandler = (e) => {\r\n    const newEntryAmount = dataEntryClone + 1;\r\n    if (newEntryAmount <= props.skillData.maxDataEntries) {\r\n      setDataEntryClone(dataEntryClone + 1);\r\n      const updatedSkill = { ...props.skillData, dataEntries: newEntryAmount };\r\n      props.update(props.index, updatedSkill);\r\n    }\r\n  };\r\n\r\n  const removeEntryAmountHandler = (e) => {\r\n    const newEntryAmount = dataEntryClone - 1;\r\n    if (newEntryAmount >= 0) {\r\n      setDataEntryClone(dataEntryClone - 1);\r\n      const updatedSkill = { ...props.skillData, dataEntries: newEntryAmount };\r\n      props.update(props.index, updatedSkill);\r\n    }\r\n  };\r\n\r\n  const positionArray = [1, 2, 3, 4, 5];\r\n\r\n  const dotArray = positionArray.map((position) => {\r\n    if (position <= props.skillData.maxDataEntries) {\r\n      if (position <= dataEntryClone) {\r\n        return \"green\";\r\n      }\r\n      return \"black\";\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const progressDots = dotArray.map((color, index) => {\r\n    const newIndex = index + 1;\r\n    if (props.canEdit) {\r\n      return (\r\n        <Dot\r\n          className=\"edit-dot\"\r\n          onClick={dotClickHandler}\r\n          key={index}\r\n          index={newIndex}\r\n          color={color}\r\n        />\r\n      );\r\n    } else {\r\n      return <Dot key={index} color={color} />;\r\n    }\r\n  });\r\n  return (\r\n    <li className=\"skill\">\r\n      <Card>\r\n        <h4 className=\"skill-title\">{props.skillData.name}</h4>\r\n        <div className=\"progress-dots-container\">{progressDots}</div>\r\n        <div className=\"amount-button-container\">\r\n          {props.canEdit && (\r\n            <Button\r\n              className=\"amount-button\"\r\n              onClick={removeEntryAmountHandler}\r\n            >\r\n              &#8722;\r\n            </Button>\r\n          )}\r\n          {props.canEdit && (\r\n            <Button className=\"amount-button\" onClick={addEntryAmountHandler}>\r\n              &#43;\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Skill;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Skill from \"./Skill\";\r\n\r\nimport \"./SkillsList.css\";\r\n\r\nconst SkillsList = (props) => {\r\n  const [skillsClone, setskillsClone] = useState();\r\n  const [showSkillList, setShowSkillList] = useState(false)\r\n  useEffect(() => {\r\n    if (props.editedProfile[props.skillKey]) {\r\n      setskillsClone(props.editedProfile[props.skillKey]);\r\n    } else {\r\n      setskillsClone(props.profile[props.skillKey]);\r\n    }\r\n  }, [skillsClone, props.editedProfile, props.profile, props.skillKey]);\r\n  const updateSkills = (index, newSkill) => {\r\n    setskillsClone(skillsClone.splice(index, 1, newSkill));\r\n    const updatedProfile = {\r\n      ...props.editedProfile,\r\n      [props.skillKey]: skillsClone,\r\n    };\r\n    props.updateProfile(updatedProfile);\r\n  };\r\n\r\n  const skillListClass = showSkillList ? \"skills-list\" : \"skills-list no-show\"\r\n\r\n  const showSkillListToggle = () => {\r\n    setShowSkillList(!showSkillList)\r\n  }\r\n\r\n  const skillsList = props.profileSkill.map((skill, index) => {\r\n    return (\r\n      <Skill\r\n        key={skill.name}\r\n        skillData={skill}\r\n        index={index}\r\n        update={updateSkills}\r\n        canEdit={props.canEdit}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <li className=\"skills-list-item\">\r\n      <h3 className=\"skills-title\" onClick={showSkillListToggle}>{props.title}</h3>\r\n      <ul className={skillListClass}>{skillsList}</ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SkillsList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ProfileName.css\";\r\n\r\nconst ProfileName = (props) => {\r\n  const [entrytValue, setEntryValue] = useState(props.profile.name);\r\n  const valueChangeHandler = (e) => {\r\n    setEntryValue(e.target.value);\r\n    props.updateProfile({ ...props.editedProfile, name: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.canEdit ? (\r\n        <div className=\"profile-name-edit\">\r\n          <h2>Name: </h2>\r\n          <input\r\n            className=\"name-edit-input\"\r\n            type=\"text\"\r\n            value={entrytValue}\r\n            onChange={valueChangeHandler}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h2>{props.profile.name}</h2>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileName;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport \"./ProfileSkillLevel.css\";\r\n\r\nconst ProfileSkillLevel = (props) => {\r\n  const [entrytValue, setEntryValue] = useState(props.profile.level);\r\n  const valueChangeHandler = (e) => {\r\n    setEntryValue(e.target.value);\r\n    props.updateProfile({ ...props.editedProfile, level: e.target.value });\r\n  };\r\n\r\n  const editSkillLevel = props.skillTitles.map((skillTitle, index) => {\r\n    const buttonActive = skillTitle === entrytValue;\r\n    let buttonClass = \"skill-level-button\";\r\n    if (buttonActive) {\r\n      buttonClass = `active ${buttonClass}`;\r\n    }\r\n    return (\r\n      <Button\r\n        key={index}\r\n        className={buttonClass}\r\n        value={skillTitle}\r\n        onClick={valueChangeHandler}\r\n      >\r\n        {skillTitle}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.canEdit ? (\r\n        <div className=\"skillLevelContainer\">\r\n          <h2>Skill Level: </h2>\r\n          <div className=\"skillLevels\">{editSkillLevel}</div>\r\n        </div>\r\n      ) : (\r\n        <h2>{props.profile.level}</h2>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileSkillLevel;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport \"./ProfileAuthLevel.css\";\r\n\r\nconst ProfileAuthLevel = (props) => {\r\n  const [entrytValue, setEntrytValue] = useState(props.profile.authorization);\r\n  const valueChangeHandler = (e) => {\r\n    setEntrytValue(e.target.value);\r\n    props.updateProfile({\r\n      ...props.editedProfile,\r\n      authorization: e.target.value,\r\n    });\r\n  };\r\n\r\n  const authLevelValues = [\"Crew Member\", \"Crew Leader\", \"Administrator\"];\r\n\r\n  const authLevels = authLevelValues.map((authLevelValue, index) => {\r\n    const buttonActive =\r\n      index.toString() === entrytValue || index === entrytValue;\r\n    let buttonClass = \"auth-level-button\";\r\n    if (buttonActive) {\r\n      buttonClass = `active ${buttonClass}`;\r\n    }\r\n    return (\r\n      <Button\r\n        key={index}\r\n        className={buttonClass}\r\n        value={index}\r\n        onClick={valueChangeHandler}\r\n      >\r\n        {authLevelValue}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"auth-level-container\">\r\n      <h2>Authorization Level: </h2>\r\n      <div className=\"auth-levels\">{authLevels}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAuthLevel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Header from \"../Components/Header\";\r\n\r\nimport \"./Profile.css\";\r\nimport SkillsList from \"../Components/SkillsList\";\r\nimport ProfileName from \"../Components/ProfileName\";\r\nimport ProfileSkillLevel from \"../Components/ProfileSkillLevel\";\r\nimport ProfileAuthLevel from \"../Components/ProfileAuthLevel\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Profile = (props) => {\r\n  const [profile, setProfile] = useState();\r\n  const [editedProfile, setEditedProfile] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [profileAuthLevel, setProfileAuthLevel] = useState();\r\n  const [httpError, setHttpError] = useState();\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [editToggle, setEditToggle] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const profileId = params.profileId;\r\n  const authorized = profileAuthLevel === 2;\r\n\r\n  useEffect(() => {\r\n    const getProfile = async (id) => {\r\n      const response = await axios\r\n        .get(`/profile/${id}`, {\r\n          headers: { \"x-auth-token\": localStorage.getItem(\"x-auth-token\") },\r\n        })\r\n        .catch((err) => console.log(err.response.data.msg));\r\n      if (!response) {\r\n        history.replace(\"/login\");\r\n      }\r\n      setProfile(response.data.data);\r\n    };\r\n\r\n    const getProfileAuthLevel = async (id) => {\r\n      const response = await axios\r\n        .get(`/profile/${id}`, {\r\n          headers: { \"x-auth-token\": localStorage.getItem(\"x-auth-token\") },\r\n        })\r\n        .catch((err) => console.log(err.response.data.msg));\r\n      if (!response) {\r\n        history.replace(\"/login\");\r\n      }\r\n      setProfileAuthLevel(response.data.data.authorization);\r\n    };\r\n    setIsLoading(true);\r\n    getProfile(profileId).catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error);\r\n    });\r\n    getProfileAuthLevel(localStorage.getItem(\"user-id\")).catch((error) => {\r\n      setHttpError(error);\r\n    });\r\n    setIsLoading(false);\r\n    setIsUpdating(false);\r\n  }, [profileId, history, isUpdating]);\r\n\r\n  if (!localStorage.getItem(\"x-auth-token\")) {\r\n    history.replace(\"/login\");\r\n  }\r\n\r\n  if (isLoading || !profile) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (httpError) {\r\n    return <p>{httpError}</p>;\r\n  }\r\n\r\n  if (!profile) {\r\n    history.replace(\"/login\");\r\n  }\r\n\r\n  const deleteProfile = async (e) => {\r\n    e.preventDefault();\r\n    await axios.delete(`/profile/${profileId}`);\r\n    history.replace(\"/profile-list\");\r\n  };\r\n\r\n  const saveProfile = async (updatedProfile) => {\r\n    await axios.patch(\r\n      `/profile/${profileId}`,\r\n      updatedProfile\r\n    );\r\n    setIsUpdating(true);\r\n    setEditToggle(false);\r\n  };\r\n\r\n  const editToggleHandler = () => {\r\n    setEditToggle(!editToggle);\r\n  };\r\n\r\n  const updateProfile = (newData) => {\r\n    setEditedProfile(newData);\r\n  };\r\n\r\n  const profilTopContainerClass = editToggle ? \"profile-top-container-edit-mode\" : \"profile-top-container\"\r\n\r\n  let buttons;\r\n\r\n  if (authorized) {\r\n    if (editToggle) {\r\n      buttons = (\r\n        <div className=\"buttons-container editmode\">\r\n          <Button className=\"delete-button\" onClick={deleteProfile}>\r\n            Delete\r\n          </Button>\r\n          <Button\r\n            className=\"save-button\"\r\n            onClick={saveProfile.bind(this, editedProfile)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button className=\"toggle-button\" onClick={editToggleHandler}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      buttons = (\r\n        <div className=\"buttons-container \">\r\n          <Button className=\"toggle-button\" onClick={editToggleHandler}>\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const skillKeyes = [\r\n    \"skillsAprenticeLevel1\",\r\n    \"skillsAprenticeLevel2\",\r\n    \"skillsJourneymanLevel1\",\r\n    \"skillsJourneymanLevel2\",\r\n  ];\r\n\r\n  const skillTitles = [\r\n    \"Apprentice Level 1\",\r\n    \"Apprentice Level 2\",\r\n    \"Journeyman Level 1\",\r\n    \"Journeyman Level 2\",\r\n  ];\r\n\r\n  const profileSkills = [\r\n    [...profile.skillsAprenticeLevel1],\r\n    [...profile.skillsAprenticeLevel2],\r\n    [...profile.skillsJourneymanLevel1],\r\n    [...profile.skillsJourneymanLevel2],\r\n  ];\r\n\r\n  const skills = profileSkills.map((profileSkill, index) => {\r\n    return (\r\n      <SkillsList\r\n        key={index}\r\n        skillKey={skillKeyes[index]}\r\n        title={skillTitles[index]}\r\n        editedProfile={editedProfile}\r\n        profile={profile}\r\n        profileSkill={profileSkill}\r\n        updateProfile={updateProfile}\r\n        canEdit={editToggle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <Header id={profile._id} auth={props.authLevel} />\r\n      <div className={profilTopContainerClass}>\r\n        <div className=\"profile-info-container\">\r\n          <ProfileName\r\n            canEdit={editToggle}\r\n            profile={profile}\r\n            editedProfile={editedProfile}\r\n            updateProfile={updateProfile}\r\n          />\r\n          <ProfileSkillLevel\r\n            canEdit={editToggle}\r\n            profile={profile}\r\n            editedProfile={editedProfile}\r\n            updateProfile={updateProfile}\r\n            skillTitles={skillTitles}\r\n          />\r\n          {editToggle && (\r\n            <ProfileAuthLevel\r\n              canEdit={editToggle}\r\n              profile={profile}\r\n              editedProfile={editedProfile}\r\n              updateProfile={updateProfile}\r\n            />\r\n          )}\r\n        </div>\r\n        {buttons}\r\n      </div>\r\n      <ul className=\"skills\">{skills}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useState } from \"react\";\r\n\r\nconst useInputField = (validate) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [wasTouched, setWasTouched] = useState(false);\r\n\r\n  const valueIsValid = validate(enteredValue);\r\n  const hasError = !valueIsValid && wasTouched;\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = () => {\r\n    setWasTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setWasTouched(false);\r\n  };\r\n\r\n  return {\r\n    enteredValue,\r\n    valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInputField;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useInputField from \"../Hooks/input-field\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Login = (props) => {\r\n  const {\r\n    enteredValue: nameInput,\r\n    valueIsValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    valueBlurHandler: nameBlurHandler,\r\n  } = useInputField((value) => value.trim() !== \"\");\r\n  const {\r\n    enteredValue: passwordInput,\r\n    valueIsValid: passwordIsValid,\r\n    hasError: passwordHasError,\r\n    valueChangeHandler: passwordChangeHandler,\r\n    valueBlurHandler: passwordBlurHandler,\r\n  } = useInputField((value) => value.trim() !== \"\");\r\n\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  let formIsValid = false;\r\n\r\n  if (nameIsValid && passwordIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const getProfileId = async (name, password) => {\r\n    const response = await axios\r\n      .post(\r\n        \"/profile/login/\",\r\n        {\r\n          name,\r\n          password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        setHttpError(err.response.data.msg);\r\n      });\r\n    if (response) {\r\n      localStorage.setItem(\"x-auth-token\", response.data.token);\r\n      localStorage.setItem(\"user-id\", response.data.id);\r\n      props.setAuthLevel(response.data.authLevel);\r\n      // Make a database with current user ids that are logged on and tokens as their key. Have a function check the database every api call\r\n      history.push(`/profile/${response.data.id}`);\r\n    }\r\n  };\r\n\r\n  const submissionHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!nameIsValid && !passwordIsValid) {\r\n      return;\r\n    }\r\n    getProfileId(nameInput, passwordInput).catch((err) => {\r\n      setHttpError(err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"login-title\">Progress Tracker</h1>\r\n      <Card className=\"login-card\">\r\n        <h2 className=\"login-header\">Login</h2>\r\n        <div className=\"login-container\">\r\n        <form className=\"login-item-form\" onSubmit={submissionHandler}>\r\n          <label className=\"login-item\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"login-item\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onBlur={nameBlurHandler}\r\n            onChange={nameChangeHandler}\r\n            value={nameInput}\r\n          />\r\n          {nameHasError && <p className=\"error\">Please enter a valid name</p>}\r\n          <label className=\"login-item\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"login-item\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onBlur={passwordBlurHandler}\r\n            onChange={passwordChangeHandler}\r\n            value={passwordInput}\r\n          />\r\n          {passwordHasError && (\r\n            <p className=\"error\">Please enter a valid password</p>\r\n          )}\r\n          <Button className=\"login-button\" disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n          {httpError && (\r\n            <p className=\"error\">\r\n              Either your password sucks or you dont have a profile\r\n            </p>\r\n          )}\r\n        </form>\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dot from \"../UI/Dot\";\r\n\r\nimport \"./SkillSummary.css\"\r\n\r\nconst SkillSummary = (props) => {\r\n  const [dotColor, setDotColor] = useState(\"black\");\r\n\r\n  let isComplete;\r\n\r\n  useEffect(() => {\r\n    props.profileSkill.map((skill, index) => {\r\n      const isMaxed =\r\n        parseInt(skill.dataEntries) === parseInt(skill.maxDataEntries);\r\n      if (index === 0) {\r\n        isComplete = isMaxed;\r\n      } else {\r\n        isComplete = isComplete && isMaxed;\r\n      }\r\n    });\r\n    if (isComplete) {\r\n      setDotColor(\"green\");\r\n    }\r\n  }, [dotColor, isComplete]);\r\n\r\n  return (\r\n    <div className=\"summary-item\">\r\n      <h5 className=\"skill-summary-title\">{props.title}</h5>\r\n      <Dot className=\"skill-summary-dot\" color={dotColor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillSummary;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"../UI/Card\";\r\nimport SkillSummary from \"./SkillSummary\";\r\n\r\nimport \"./ProfileListItem.css\";\r\n\r\nconst ProfileListItem = (props) => {\r\n  const history = useHistory();\r\n\r\n  const clickHandler = () => {\r\n    history.push(`profile/${props.profile._id}`);\r\n  };\r\n\r\n  const profileSkills = [\r\n    props.profile.skillsAprenticeLevel1,\r\n    props.profile.skillsAprenticeLevel2,\r\n    props.profile.skillsJourneymanLevel1,\r\n    props.profile.skillsJourneymanLevel2,\r\n  ];\r\n\r\n  const skillTitles = [\r\n    \"Apprentice Level 1\",\r\n    \"Apprentice Level 2\",\r\n    \"Journeyman Level 1\",\r\n    \"Journeyman Level 2\",\r\n  ];\r\n\r\n  const skillSummaries = profileSkills.map((profileSkill, index) => {\r\n    return (\r\n      <SkillSummary\r\n        key={skillTitles[index]}\r\n        profileSkill={profileSkill}\r\n        title={skillTitles[index]}\r\n      />\r\n    );\r\n  });\r\n\r\n  const authLevelValues = [\"Crew Member\", \"Crew Leader\", \"Administrator\"];\r\n\r\n  return (\r\n    <li className=\"profile-list-container\">\r\n      <Card className=\"profile-list-card\" onClick={clickHandler}>\r\n        <div className=\"profile-list-item\">\r\n          <h3 className=\"profile-name\">{props.profile.name}</h3>\r\n          <div className=\"skill-summaries\">{skillSummaries}</div>\r\n          <div>\r\n            <h4>{props.profile.level}</h4>\r\n            <h4>{authLevelValues[props.profile.authorization]}</h4>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProfileListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProfileListItem from \"../Components/ProfileListItem\";\r\nimport Header from \"../Components/Header\";\r\n\r\nimport \"./ProfileList.css\";\r\n\r\nconst ProfileList = (props) => {\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect(() => {\r\n    const getProfiles = async () => {\r\n      const response = await axios.get(\"/profile/\", {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"x-auth-token\") },\r\n      });\r\n      if (!response) {\r\n        throw new Error(\"Something Went Wrong\");\r\n      }\r\n      setProfiles(response.data.data);\r\n    };\r\n    setIsLoading(true);\r\n    getProfiles().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (httpError) {\r\n    return <p>{httpError}</p>;\r\n  }\r\n  const profilesList = profiles.map((profile) => {\r\n    return <ProfileListItem key={profile.name} profile={profile} />;\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header canEdit={props.authLevel} />\r\n      <ul className=\"profile-list\">{profilesList}</ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport CreateNewProfile from \"./Pages/CreateNewProfile\";\nimport Profile from \"./Pages/Profile\";\nimport Login from \"./Pages/Login\";\nimport ProfileList from \"./Pages/ProfileList\";\n\nfunction App() {\n  const [canEdit, setCanEdit] = useState(false);\n  const [authLevel, setAuthLevel] = useState();\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/login\" />\n        </Route>\n        <Route path=\"/login\">\n          <Login setAuthLevel={setAuthLevel} />\n        </Route>\n        <Route path={\"/profile/:profileId\"}>\n          <Profile\n            canEdit={canEdit}\n            setCanEdit={setCanEdit}\n            authLevel={authLevel}\n          />\n        </Route>\n        <Route path=\"/new-profile\">\n          <CreateNewProfile />\n        </Route>\n        <Route path=\"/profile-list\">\n          <ProfileList />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}